# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1.29.4+k3s1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'scale_down': 'IoK8sApiAutoscalingV2HPAScalingRules',
        'scale_up': 'IoK8sApiAutoscalingV2HPAScalingRules'
    }

    attribute_map = {
        'scale_down': 'scaleDown',
        'scale_up': 'scaleUp'
    }

    def __init__(self, scale_down=None, scale_up=None, _configuration=None):  # noqa: E501
        """IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._scale_down = None
        self._scale_up = None
        self.discriminator = None

        if scale_down is not None:
            self.scale_down = scale_down
        if scale_up is not None:
            self.scale_up = scale_up

    @property
    def scale_down(self):
        """Gets the scale_down of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.  # noqa: E501

        scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).  # noqa: E501

        :return: The scale_down of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2HPAScalingRules
        """
        return self._scale_down

    @scale_down.setter
    def scale_down(self, scale_down):
        """Sets the scale_down of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.

        scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).  # noqa: E501

        :param scale_down: The scale_down of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.  # noqa: E501
        :type: IoK8sApiAutoscalingV2HPAScalingRules
        """

        self._scale_down = scale_down

    @property
    def scale_up(self):
        """Gets the scale_up of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.  # noqa: E501

        scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:   * increase no more than 4 pods per 60 seconds   * double the number of pods per 60 seconds No stabilization is used.  # noqa: E501

        :return: The scale_up of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.  # noqa: E501
        :rtype: IoK8sApiAutoscalingV2HPAScalingRules
        """
        return self._scale_up

    @scale_up.setter
    def scale_up(self, scale_up):
        """Sets the scale_up of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.

        scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:   * increase no more than 4 pods per 60 seconds   * double the number of pods per 60 seconds No stabilization is used.  # noqa: E501

        :param scale_up: The scale_up of this IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior.  # noqa: E501
        :type: IoK8sApiAutoscalingV2HPAScalingRules
        """

        self._scale_up = scale_up

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior):
            return True

        return self.to_dict() != other.to_dict()
