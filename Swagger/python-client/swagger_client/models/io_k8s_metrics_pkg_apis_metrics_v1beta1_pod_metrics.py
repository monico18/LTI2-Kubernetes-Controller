# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1.29.4+k3s1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class IoK8sMetricsPkgApisMetricsV1beta1PodMetrics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'api_version': 'str',
        'containers': 'list[IoK8sMetricsPkgApisMetricsV1beta1ContainerMetrics]',
        'kind': 'str',
        'metadata': 'IoK8sApimachineryPkgApisMetaV1ObjectMeta',
        'timestamp': 'IoK8sApimachineryPkgApisMetaV1Time',
        'window': 'IoK8sApimachineryPkgApisMetaV1Duration'
    }

    attribute_map = {
        'api_version': 'apiVersion',
        'containers': 'containers',
        'kind': 'kind',
        'metadata': 'metadata',
        'timestamp': 'timestamp',
        'window': 'window'
    }

    def __init__(self, api_version=None, containers=None, kind=None, metadata=None, timestamp=None, window=None, _configuration=None):  # noqa: E501
        """IoK8sMetricsPkgApisMetricsV1beta1PodMetrics - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._api_version = None
        self._containers = None
        self._kind = None
        self._metadata = None
        self._timestamp = None
        self._window = None
        self.discriminator = None

        if api_version is not None:
            self.api_version = api_version
        self.containers = containers
        if kind is not None:
            self.kind = kind
        if metadata is not None:
            self.metadata = metadata
        self.timestamp = timestamp
        self.window = window

    @property
    def api_version(self):
        """Gets the api_version of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :type: str
        """

        self._api_version = api_version

    @property
    def containers(self):
        """Gets the containers of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501

        Metrics for all containers are collected within the same time window.  # noqa: E501

        :return: The containers of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :rtype: list[IoK8sMetricsPkgApisMetricsV1beta1ContainerMetrics]
        """
        return self._containers

    @containers.setter
    def containers(self, containers):
        """Sets the containers of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.

        Metrics for all containers are collected within the same time window.  # noqa: E501

        :param containers: The containers of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :type: list[IoK8sMetricsPkgApisMetricsV1beta1ContainerMetrics]
        """
        if self._configuration.client_side_validation and containers is None:
            raise ValueError("Invalid value for `containers`, must not be `None`")  # noqa: E501

        self._containers = containers

    @property
    def kind(self):
        """Gets the kind of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :type: str
        """

        self._kind = kind

    @property
    def metadata(self):
        """Gets the metadata of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501

        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata  # noqa: E501

        :return: The metadata of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.

        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata  # noqa: E501

        :param metadata: The metadata of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :type: IoK8sApimachineryPkgApisMetaV1ObjectMeta
        """

        self._metadata = metadata

    @property
    def timestamp(self):
        """Gets the timestamp of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501

        The following fields define time interval from which metrics were collected from the interval [Timestamp-Window, Timestamp].  # noqa: E501

        :return: The timestamp of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1Time
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.

        The following fields define time interval from which metrics were collected from the interval [Timestamp-Window, Timestamp].  # noqa: E501

        :param timestamp: The timestamp of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :type: IoK8sApimachineryPkgApisMetaV1Time
        """
        if self._configuration.client_side_validation and timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def window(self):
        """Gets the window of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501


        :return: The window of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1Duration
        """
        return self._window

    @window.setter
    def window(self, window):
        """Sets the window of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.


        :param window: The window of this IoK8sMetricsPkgApisMetricsV1beta1PodMetrics.  # noqa: E501
        :type: IoK8sApimachineryPkgApisMetaV1Duration
        """
        if self._configuration.client_side_validation and window is None:
            raise ValueError("Invalid value for `window`, must not be `None`")  # noqa: E501

        self._window = window

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IoK8sMetricsPkgApisMetricsV1beta1PodMetrics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoK8sMetricsPkgApisMetricsV1beta1PodMetrics):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoK8sMetricsPkgApisMetricsV1beta1PodMetrics):
            return True

        return self.to_dict() != other.to_dict()
